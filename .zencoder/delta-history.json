{"snapshots":{"/home/abdulbosit/IdeaProjects/certificate/ONLINE-EDUCATION/src/main/resources/templates/courses.html":{"filePath":"/home/abdulbosit/IdeaProjects/certificate/ONLINE-EDUCATION/src/main/resources/templates/courses.html","baseContent":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>API Course Search</title>\n\n    <!-- Ikonkalar uchun Font Awesome -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css\">\n    <!-- Shriftlar uchun Google Fonts -->\n    <link href=\"https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap\" rel=\"stylesheet\">\n\n    <!-- ======================= CSS STYLES ======================= -->\n    <style>\n        :root {\n            --primary-color: #4582ff;\n            --text-color: #555;\n            --heading-color: #111;\n            --border-color: #e0e0e0;\n            --background-color: #f8f9fa;\n            --white-color: #fff;\n            --shadow: 0 4px 12px rgba(0,0,0,0.08);\n        }\n        body {\n            font-family: 'Poppins', sans-serif;\n            color: var(--text-color);\n            margin: 0;\n            background-color: var(--background-color);\n        }\n        .container {\n            max-width: 1200px;\n            margin: 0 auto;\n            padding: 20px;\n        }\n        .header {\n            background: var(--white-color);\n            padding: 20px;\n            border-radius: 12px;\n            box-shadow: var(--shadow);\n            margin-bottom: 30px;\n        }\n        .header h1 {\n            margin: 0 0 10px;\n            text-align: center;\n            color: var(--heading-color);\n        }\n        #api-form {\n            display: flex;\n            gap: 10px;\n        }\n        #api-url-input {\n            flex-grow: 1;\n            border: 1px solid var(--border-color);\n            border-radius: 8px;\n            padding: 12px 15px;\n            font-size: 16px;\n            outline: none;\n            transition: border-color 0.2s;\n        }\n        #api-url-input:focus {\n            border-color: var(--primary-color);\n        }\n        #api-form button {\n            border: none;\n            background: var(--primary-color);\n            color: var(--white-color);\n            padding: 0 25px;\n            cursor: pointer;\n            font-size: 16px;\n            font-weight: 500;\n            border-radius: 8px;\n            display: flex;\n            align-items: center;\n            gap: 8px;\n            transition: background-color 0.2s;\n        }\n        #api-form button:hover {\n            background-color: #3a75e8;\n        }\n        .results-summary {\n            margin-bottom: 20px;\n            font-weight: 500;\n            padding: 10px;\n            background: #eef3ff;\n            border-left: 4px solid var(--primary-color);\n            border-radius: 4px;\n        }\n        .results-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n            gap: 20px;\n        }\n        .course-card {\n            background: var(--white-color);\n            border: 1px solid var(--border-color);\n            border-radius: 12px;\n            overflow: hidden;\n            transition: transform 0.2s ease, box-shadow 0.2s ease;\n            display: flex;\n            flex-direction: column;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.05);\n        }\n        .course-card:hover {\n            transform: translateY(-5px);\n            box-shadow: var(--shadow);\n        }\n        .card-image-placeholder {\n            height: 160px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-size: 4rem;\n            font-weight: bold;\n            color: white;\n            text-shadow: 1px 1px 3px rgba(0,0,0,0.2);\n        }\n        .card-content {\n            padding: 20px;\n            flex-grow: 1;\n            border-bottom: 1px solid var(--border-color);\n        }\n        .card-content h3 {\n            margin: 0 0 10px;\n            font-size: 18px;\n            color: var(--heading-color);\n            height: 54px;\n            line-height: 1.5;\n            overflow: hidden;\n        }\n        .card-content .description {\n            font-size: 14px;\n            height: 60px;\n            overflow: hidden;\n            color: #777;\n        }\n        .course-meta {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            font-size: 13px;\n            color: #777;\n            padding: 15px 20px;\n            background-color: #fafbff;\n        }\n        .stars { color: #ffb60a; }\n        .pagination {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            gap: 10px;\n            margin-top: 40px;\n        }\n        .pagination button {\n            border: 1px solid var(--border-color);\n            background: var(--white-color);\n            min-width: 40px;\n            height: 40px;\n            padding: 0 10px;\n            border-radius: 8px;\n            cursor: pointer;\n            font-weight: 500;\n        }\n        .pagination button.active {\n            background: var(--primary-color);\n            color: var(--white-color);\n            border-color: var(--primary-color);\n        }\n        .loader {\n            border: 5px solid #f3f3f3;\n            border-top: 5px solid var(--primary-color);\n            border-radius: 50%;\n            width: 50px;\n            height: 50px;\n            animation: spin 1s linear infinite;\n            margin: 50px auto;\n        }\n        @keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }\n        .message-container {\n            text-align: center;\n            padding: 50px;\n            background-color: var(--white-color);\n            border-radius: 12px;\n            color: #999;\n        }\n        .message-container i {\n            font-size: 50px;\n            margin-bottom: 20px;\n        }\n        .message-container.error {\n            color: #d9534f;\n            background-color: #f2dede;\n            border: 1px solid #ebccd1;\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"container\">\n    <header class=\"header\">\n        <h1>API Course Tester</h1>\n        <form id=\"api-form\">\n            <input type=\"text\" id=\"api-url-input\" name=\"url\" placeholder=\"Paste your full API URL here...\" value=\"http://localhost:8080/api/v1/open/courses/filter?size=9\">\n            <button type=\"submit\">\n                <i class=\"fas fa-paper-plane\"></i> Send\n            </button>\n        </form>\n    </header>\n\n    <main>\n        <div id=\"results-summary\" class=\"results-summary\" style=\"display: none;\"></div>\n        <div id=\"results-container\" class=\"results-grid\">\n            <div id=\"message-container\" class=\"message-container\">\n                <i class=\"fas fa-cloud-upload-alt\"></i>\n                <h2>Ready to fetch data</h2>\n                <p>Enter an API endpoint URL in the field above and click \"Send\".</p>\n            </div>\n        </div>\n        <div id=\"pagination-controls\" class=\"pagination\"></div>\n    </main>\n</div>\n\n<!-- ======================= JAVASCRIPT CODE ======================= -->\n<script>\n    document.addEventListener('DOMContentLoaded', () => {\n\n        const form = document.getElementById('api-form');\n        const urlInput = document.getElementById('api-url-input');\n        const resultsContainer = document.getElementById('results-container');\n        const summaryContainer = document.getElementById('results-summary');\n        const paginationControls = document.getElementById('pagination-controls');\n        const messageContainer = document.getElementById('message-container');\n\n        form.addEventListener('submit', (e) => {\n            e.preventDefault();\n            const apiUrl = urlInput.value.trim();\n            if (!apiUrl) {\n                showMessage('Please enter a valid API URL.', 'error');\n                return;\n            }\n            fetchAndRender(apiUrl);\n        });\n\n        async function fetchAndRender(apiUrl) {\n            showLoader();\n\n            try {\n                const response = await fetch(apiUrl);\n\n                if (!response.ok) {\n                    throw new Error(`HTTP error! Status: ${response.status} ${response.statusText}`);\n                }\n\n                const data = await response.json();\n\n                if (data.success && data.data) {\n                    renderResults(data.data, apiUrl);\n                } else {\n                    throw new Error(data.message || 'API response was not successful.');\n                }\n            } catch (error) {\n                console.error('Fetch error:', error);\n                showMessage(`<strong>Error:</strong> ${error.message}. Please check the console and the API URL.`, 'error');\n            }\n        }\n\n        function renderResults(data, baseUrl) {\n            resultsContainer.innerHTML = '';\n            summaryContainer.style.display = 'block';\n\n            if (data.empty) {\n                showMessage('No courses found for this request.', 'info');\n                summaryContainer.textContent = 'Found 0 results.';\n                paginationControls.innerHTML = '';\n                return;\n            }\n\n            summaryContainer.textContent = `Showing ${data.numberOfElements} of ${data.totalElements} results. Page ${data.pageNumber + 1} of ${data.totalPages}.`;\n\n            data.content.forEach(course => {\n                const courseCard = document.createElement('div');\n                courseCard.className = 'course-card';\n                const firstLetter = course.title.charAt(0).toUpperCase();\n                const colorIndex = course.id % 360;\n\n                courseCard.innerHTML = `\n                        <div class=\"card-image-placeholder\" style=\"background-color: hsl(${colorIndex}, 60%, 50%)\">\n                            <span>${firstLetter}</span>\n                        </div>\n                        <div class=\"card-content\">\n                            <h3><a href=\"/courses/${course.slug}\" target=\"_blank\">${course.title}</a></h3>\n                            <p class=\"description\">${course.description}</p>\n                        </div>\n                        <div class=\"course-meta\">\n                            <span class=\"stars\" title=\"Rating: ${course.reviewSummary.averageRating.toFixed(1)}\">\n                                ${generateStars(course.reviewSummary.averageRating)}\n                                (${course.reviewSummary.count})\n                            </span>\n                            <span><i class=\"fas fa-book-open\"></i> ${course.modulesCount} Modules</span>\n                        </div>\n                    `;\n                resultsContainer.appendChild(courseCard);\n            });\n\n            renderPagination(data, baseUrl);\n        }\n\n        function renderPagination(data, baseUrl) {\n            paginationControls.innerHTML = '';\n            if (data.totalPages <= 1) return;\n\n            for (let i = 0; i < data.totalPages; i++) {\n                const pageButton = document.createElement('button');\n                pageButton.innerText = i + 1;\n                if (i === data.pageNumber) {\n                    pageButton.classList.add('active');\n                }\n                pageButton.addEventListener('click', () => {\n                    const url = new URL(baseUrl);\n                    url.searchParams.set('page', i);\n                    urlInput.value = url.toString(); // Inputni ham yangilaymiz\n                    fetchAndRender(url.toString());\n                });\n                paginationControls.appendChild(pageButton);\n            }\n        }\n\n        function generateStars(rating) {\n            let html = '';\n            for (let i = 1; i <= 5; i++) {\n                if (rating >= i) html += '<i class=\"fas fa-star\"></i>';\n                else if (rating >= i - 0.5) html += '<i class=\"fas fa-star-half-alt\"></i>';\n                else html += '<i class=\"far fa-star\"></i>';\n            }\n            return html;\n        }\n\n        function showLoader() {\n            resultsContainer.innerHTML = '<div class=\"loader\"></div>';\n            summaryContainer.style.display = 'none';\n            paginationControls.innerHTML = '';\n        }\n\n        function showMessage(message, type = 'info') {\n            resultsContainer.innerHTML = `\n                    <div class=\"message-container ${type}\">\n                        <i class=\"fas ${type === 'error' ? 'fa-exclamation-triangle' : 'fa-info-circle'}\"></i>\n                        <div>${message}</div>\n                    </div>\n                `;\n        }\n    });\n</script>\n</body>\n</html>","baseTimestamp":1753816518691},"/home/abdulbosit/IdeaProjects/certificate/ONLINE-EDUCATION/src/main/java/uz/pdp/online_education/service/AttachmentServiceImpl.java":{"filePath":"/home/abdulbosit/IdeaProjects/certificate/ONLINE-EDUCATION/src/main/java/uz/pdp/online_education/service/AttachmentServiceImpl.java","baseContent":"package uz.pdp.online_education.service;\n\nimport io.minio.GetPresignedObjectUrlArgs;\nimport io.minio.MinioClient;\nimport io.minio.ObjectWriteResponse;\nimport io.minio.PutObjectArgs;\nimport io.minio.http.Method;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.stereotype.Service;\nimport org.springframework.web.multipart.MultipartFile;\nimport uz.pdp.online_education.config.properties.MinioProperties;\nimport uz.pdp.online_education.exceptions.EntityNotFoundException;\nimport uz.pdp.online_education.mapper.AttachmentMapper;\nimport uz.pdp.online_education.model.Attachment;\nimport uz.pdp.online_education.payload.content.attachmentContent.AttachmentDTO;\nimport uz.pdp.online_education.repository.AttachmentRepository;\nimport uz.pdp.online_education.service.interfaces.AttachmentService;\n\nimport java.util.UUID;\nimport java.util.concurrent.TimeUnit;\n\nimport static org.springframework.hateoas.server.mvc.WebMvcLinkBuilder.linkTo;\n\n@Slf4j\n@Service\n//@RequiredArgsConstructor\npublic class AttachmentServiceImpl implements AttachmentService {\n\n    private final AttachmentRepository attachmentRepository;\n    private final AttachmentMapper attachmentMapper;\n    private final MinioClient minioClient;\n    private final MinioProperties minio;\n\n\n    public AttachmentServiceImpl(AttachmentRepository attachmentRepository,\n                                 AttachmentMapper attachmentMapper,\n                                 MinioClient minioClient,\n                                 MinioProperties minio) {\n        this.attachmentRepository = attachmentRepository;\n        this.attachmentMapper = attachmentMapper;\n        this.minioClient = minioClient;\n        this.minio = minio;\n    }\n\n    @Override\n    public AttachmentDTO read(Long id) {\n        Attachment attachment = attachmentRepository.findById(id)\n                .orElseThrow(() -> new EntityNotFoundException(\"Attachment not found with id: \" + id));\n        return attachmentMapper.toDTO(attachment);\n    }\n\n\n    /**\n     * @param multipartFile file\n     * @return attachmentDTO\n     */\n    @Override\n    public AttachmentDTO saveIcon(MultipartFile multipartFile) {\n        String bucketName = minio.getBuckets().get(2);\n        String minioKey = saveFileMinio(multipartFile, bucketName);\n\n        Attachment attachment = new Attachment(\n                multipartFile.getOriginalFilename(),\n                multipartFile.getContentType(),\n                multipartFile.getSize(),\n                minioKey,\n                bucketName\n        );\n\n        attachmentRepository.save(attachment);\n\n        return attachmentMapper.toDTO(attachment);\n    }\n\n\n    /**\n     * @param multipartFile file\n     * @return AttachmentDTO\n     */\n    @Override\n    public AttachmentDTO create(MultipartFile multipartFile) {\n        String bucketName = minio.getBuckets().get(0);\n        String minioKey = saveFileMinio(multipartFile, bucketName);\n\n        Attachment attachment = new Attachment(\n                multipartFile.getOriginalFilename(),\n                multipartFile.getContentType(),\n                multipartFile.getSize(),\n                minioKey,\n                bucketName\n        );\n\n        attachmentRepository.save(attachment);\n\n        log.info(\"Uploading single file: {}\", multipartFile.getOriginalFilename());\n        return attachmentMapper.toDTO(attachment);\n    }\n\n    @Override\n    public String tempLink(Long id, Integer minute) {\n        Attachment attachment = attachmentRepository.findById(id)\n                .orElseThrow(() -> new EntityNotFoundException(\"Attachment not found with id: \" + id));\n\n        String minioKey = attachment.getMinioKey();\n\n        try {\n\n            return minioClient.getPresignedObjectUrl(\n                    GetPresignedObjectUrlArgs.builder()\n                            .bucket(attachment.getBucketName())\n                            .object(minioKey)\n                            .method(Method.GET)\n                            .expiry(minute, TimeUnit.MINUTES)\n                            .build()\n            );\n//            return new ResponseEntity<>(presignedObjectUrl, HttpStatus.OK);\n\n\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n\n    }\n\n    /**\n     * @param id Long\n     */\n    @Override\n    public void delete(Long id) {\n        Attachment attachment = attachmentRepository.findById(id)\n                .orElseThrow(() -> new EntityNotFoundException(\"Attachment not fount with id :\" + id));\n\n        attachmentRepository.delete(attachment);\n    }\n\n    private String saveFileMinio(MultipartFile multipartFile, String bucketName) {\n\n        try {\n\n            ObjectWriteResponse objectWriteResponse = minioClient.putObject(\n                    PutObjectArgs.builder()\n                            .object(UUID.randomUUID() + \"\" + multipartFile.getOriginalFilename())\n                            .contentType(multipartFile.getContentType())\n                            .bucket(bucketName)\n                            .stream(multipartFile.getInputStream(), multipartFile.getSize(), -1)\n                            .build()\n            );\n\n            return objectWriteResponse.object();\n\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n\n\n    }\n}\n","baseTimestamp":1753817337974,"deltas":[{"timestamp":1753817340121,"changes":[{"type":"MODIFY","lineNumber":143,"content":"                            .object(UUID.randomUUID() + \"_\" + multipartFile.getOriginalFilename())","oldContent":"                            .object(UUID.randomUUID() + \"\" + multipartFile.getOriginalFilename())"}]}]},"/Dummy.txt":{"filePath":"/Dummy.txt","baseContent":"create GenerateController and criteriaQuery FilterSpecification","baseTimestamp":1753817385754,"deltas":[{"timestamp":1753817421778,"changes":[{"type":"MODIFY","lineNumber":0,"content":"generate course.html fayl","oldContent":"create GenerateController and criteriaQuery FilterSpecification"}]}]}}}